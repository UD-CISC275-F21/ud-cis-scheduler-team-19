{"version":3,"sources":["components/SemesterTable.tsx","components/CourseModal.tsx","components/ControlPanel.tsx","components/DragnDrop.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SemesterTable","schedule","Row","Table","className","scope","prefix","name","credits","prereq","CourseModal","course","visible","setVisible","semesterAdded","allSchedules","useState","setName","semester","currentSemester","setCurrentSemester","i","push","hide","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","as","rows","value","onChange","ev","target","FloatingLabel","label","Select","map","index","limits","breadth","terms","description","Footer","Button","variant","onClick","parseInt","ControlPanel","courseList","setAllSchedules","isSidebarActive","setIsSidebarActive","setSemesterAdded","currentCourse","setCurrentCourse","CustomToggle","React","forwardRef","props","ref","href","e","preventDefault","children","displayName","CustomMenu","setValue","style","labeledBy","FormControl","autoFocus","placeholder","Children","toArray","coursePrinter","key","courses","toString","Dropdown","Item","eventKey","length","TheSidebar","id","Toggle","Menu","active","type","semesters","semesterHandler","newSchedules","modalHandler","Box","useDrag","collect","monitor","isDragging","drag","dragPreview","opacity","role","App","COURSELIST","Object","values","tempList","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb6efa9c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Row, Table } from \"react-bootstrap\";\r\nimport { Course } from \"../interfaces/course\";\r\n\r\nexport function SemesterTable({ schedule }:\r\n{\r\n    schedule: Course[]\r\n}): JSX.Element {\r\n    return <Row>\r\n        <Table className=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"row\">Course</th>\r\n                    <th scope=\"row\">Description</th>\r\n                    <th scope=\"row\">Credits</th>\r\n                    <th scope=\"row\">Prerequisites</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    {schedule[0] != null && <th>{schedule[0].prefix}</th>}\r\n                    {schedule[0] != null && <th>{schedule[0].name}</th>}\r\n                    {schedule[0] != null && <th>{schedule[0].credits}</th>}\r\n                    {schedule[0] != null && <th>{schedule[0].prereq}</th>}\r\n                </tr>\r\n                <tr>\r\n                    {schedule[1] != null && <th>{schedule[1].prefix}</th>}\r\n                    {schedule[1] != null && <th>{schedule[1].name}</th>}\r\n                    {schedule[1] != null && <th>{schedule[1].credits}</th>}\r\n                    {schedule[0] != null && <th>{schedule[1].prereq}</th>}\r\n                </tr>\r\n                <tr>\r\n                    {schedule[2] != null && <th>{schedule[2].prefix}</th>}\r\n                    {schedule[2] != null && <th>{schedule[2].name}</th>}\r\n                    {schedule[2] != null && <th>{schedule[2].credits}</th>}\r\n                    {schedule[0] != null && <th>{schedule[2].prereq}</th>}\r\n                </tr>\r\n                <tr>\r\n                    {schedule[3] != null && <th>{schedule[3].prefix}</th>}\r\n                    {schedule[3] != null && <th>{schedule[3].name}</th>}\r\n                    {schedule[3] != null && <th>{schedule[3].credits}</th>}\r\n                    {schedule[0] != null && <th>{schedule[3].prereq}</th>}\r\n                </tr>\r\n                <tr>\r\n                    {schedule[4] != null && <th>{schedule[4].prefix}</th>}\r\n                    {schedule[4] != null && <th>{schedule[4].name}</th>}\r\n                    {schedule[4] != null && <th>{schedule[4].credits}</th>}\r\n                    {schedule[0] != null && <th>{schedule[4].prereq}</th>}\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    </Row>;\r\n}","import React, { useState } from \"react\";\r\nimport { Button, Form, Modal, FloatingLabel } from \"react-bootstrap\";\r\nimport { Course } from \"../interfaces/course\";\r\n\r\nexport function CourseModal({course, visible, setVisible, semesterAdded, allSchedules}:\r\n{\r\n    course: Course,\r\n    visible: boolean,\r\n    setVisible: (b: boolean) => void,\r\n    semesterAdded: number,\r\n    allSchedules: Course[][]\r\n}): JSX.Element {\r\n    const [name, setName] = useState<string>(course.name);\r\n    const semester = [];\r\n    const [currentSemester, setCurrentSemester] = useState(\"\");\r\n    for(let i = 1; i <= semesterAdded; i++){\r\n        semester.push(i);\r\n    }\r\n    function save() {\r\n        course.name = name;\r\n        setVisible(false);\r\n        allSchedules[parseInt(currentSemester)-1].push(course);\r\n    }\r\n\r\n    const hide = () => setVisible(false);\r\n    return (\r\n        <Modal show={visible} onHide={hide}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{course.prefix}</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"CourseForm.nameTextArea\">\r\n                        <Form.Label>Course Name</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3}\r\n                            value={name}\r\n                            onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setName(ev.target.value)}/>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Label>Add To Semester:</Form.Label>\r\n                    <Form.Group className=\"mb-3\" controlId=\"CourseForm.semesterSelection\">\r\n                        <FloatingLabel controlId=\"semesterSelect\" label=\"\">\r\n                            <Form.Select aria-label=\"Semester selection\" onChange={(ev: React.ChangeEvent<HTMLSelectElement>) => setCurrentSemester(ev.target.value)}>\r\n                                <option>Add course to semester</option>\r\n                                {semester.map((index) => \r\n                                    <option value={index} key={index}>{index}</option>\r\n                                )}\r\n                                \r\n                            </Form.Select>\r\n                        </FloatingLabel>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"CourseForm.descriptionCredits\">\r\n                        <Form.Label>Credits: {course.credits}</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"CourseForm.descriptionPrereq\">\r\n                        <Form.Label>Prerequisites: {course.prereq}</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"CourseForm.descriptionLimits\">\r\n                        <Form.Label>Limits: {course.limits}</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"CourseForm.descriptionBreadth\">\r\n                        <Form.Label>Breadth: {course.breadth}</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"CourseForm.descriptionTerms\">\r\n                        <Form.Label>Terms: {course.terms}</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"CourseForm.description\">\r\n                        <p>Course Description:</p>\r\n                        <p>{course.description}</p>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={hide}>Close</Button>\r\n                <Button variant=\"primary\" onClick={save}>Save changes</Button>\r\n            </Modal.Footer>\r\n        </Modal>);\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport React, { useState } from \"react\";\r\nimport { Row,/* Col, */Button } from \"react-bootstrap\";\r\nimport { SemesterTable } from \"./SemesterTable\";\r\nimport { Course } from \"../interfaces/course\";\r\nimport { CourseModal } from \"./CourseModal\";\r\n//import { findRenderedComponentWithType } from \"react-dom/test-utils\";\r\n\r\nexport function ControlPanel({ courseList, allSchedules, setAllSchedules, visible, setVisible }: \r\n{\r\n    courseList: Course[],\r\n    allSchedules: Course[][],\r\n    setAllSchedules: (c: Course[][]) => void,\r\n    visible: boolean,\r\n    setVisible: (b: boolean) => void\r\n}): JSX.Element {\r\n    type CustomToggleProps = {\r\n        children?: React.ReactNode;\r\n        onClick?: (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => unknown;\r\n    };\r\n    type CustomMenuProps = {\r\n        children?: React.ReactNode;\r\n        style?: React.CSSProperties;\r\n        className?: string;\r\n        labeledBy?: string;\r\n    };\r\n    const [isSidebarActive, setIsSidebarActive] = useState(true);\r\n    const [semesterAdded, setSemesterAdded] = useState(1);\r\n    const [currentCourse, setCurrentCourse] = useState<Course>(courseList[0]);\r\n    const CustomToggle = React.forwardRef((props: CustomToggleProps, ref: React.Ref<HTMLAnchorElement>) => {\r\n        return <a\r\n            href=\"\"\r\n            ref={ref}\r\n            onClick={(e) => {\r\n                e.preventDefault();\r\n                if (props.onClick){\r\n                    props.onClick(e);\r\n                }\r\n            }}\r\n        >\r\n            {props.children}\r\n            &#x25bc;\r\n        </a>;\r\n    });\r\n    CustomToggle.displayName = \"CustomToggle\";\r\n    const CustomMenu = React.forwardRef<HTMLInputElement>((props: CustomMenuProps, ref: React.Ref<HTMLDivElement>) => {\r\n        const [value, setValue] = useState(\"\");\r\n        return (\r\n            <div\r\n                ref={ref}\r\n                style={props.style}\r\n                className={props.className}\r\n                aria-labelledby={props.labeledBy}\r\n            >\r\n                <FormControl\r\n                    autoFocus\r\n                    className=\"mx-3 my-2 w-auto\"\r\n                    placeholder=\"Type to filter...\"\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    value={value}\r\n                />\r\n                <ul className=\"list-unstyled\">\r\n                    {React.Children.toArray(props.children)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    },\r\n    );\r\n    CustomMenu.displayName = \"CustomMenu\"; \r\n\r\n    function onClick(course: Course) {\r\n        setCurrentCourse(course);\r\n        setVisible(true);\r\n    }\r\n    \r\n    function coursePrinter(): JSX.Element[] {\r\n        const courses = [];\r\n        let key: string;\r\n        for(let i = 0; i < courseList.length; i++){\r\n            key = (i+1).toString();\r\n            courses.push(<Dropdown.Item onClick={() => onClick(courseList[i])} eventKey={key}>{courseList[i].prefix}</Dropdown.Item>);\r\n        }\r\n        return courses;\r\n    }\r\n\r\n    const TheSidebar = () => \r\n        <nav id=\"sidebar\">\r\n            <div className=\"sidebar-header\">\r\n                <h3>UD CISC Scheduler</h3>\r\n            </div>\r\n            <ul className=\"list-unstyled components\">\r\n                <p>Classes</p>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n                        <div className=\"selection-title\">\r\n                            CISC\r\n                        </div>\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu as={CustomMenu}>\r\n                        {coursePrinter()}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components2\">\r\n                        <div className=\"selection-title\">\r\n                            MATH\r\n                        </div>\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu as={CustomMenu}>\r\n                        <Dropdown.Item eventKey=\"1\">eee</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">fff</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\" active>\r\n                            ggg\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"1\">hhh</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </ul>\r\n        </nav>\r\n    ;\r\n    function sidebarHandler() {\r\n        if(isSidebarActive){\r\n            setIsSidebarActive(false);\r\n        }else{\r\n            setIsSidebarActive(true);\r\n        }\r\n    }\r\n\r\n    function semesterHandler() {\r\n        const semesters = [];\r\n        let key: string;\r\n        for(let i = 0; i < semesterAdded-1; i++){\r\n            key = (i+1).toString();\r\n            semesters.push(<SemesterTable schedule={allSchedules[i]} key={key}></SemesterTable>);\r\n        }\r\n        return semesters;\r\n    }\r\n\r\n    function modalHandler() {\r\n        if(visible){\r\n            return <CourseModal course={currentCourse} visible={visible} setVisible={setVisible} semesterAdded={semesterAdded} allSchedules={allSchedules}></CourseModal>;\r\n        }\r\n    }\r\n\r\n    function addSemester(){\r\n        setSemesterAdded(semesterAdded+1);\r\n        allSchedules.push([]);\r\n    }\r\n\r\n    function removeSemester(){\r\n        const newSchedules = [];\r\n        setSemesterAdded(semesterAdded-1);\r\n        for(let i = 0; i < semesterAdded-2; i++){\r\n            newSchedules.push(allSchedules[i]);\r\n        }\r\n        setAllSchedules(newSchedules);\r\n    }\r\n    \r\n    return (\r\n        <Row>\r\n            <div className=\"wrapper\">\r\n                { isSidebarActive ? <TheSidebar /> : null }\r\n                <div id=\"content\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <div className=\"container-fluid\">\r\n                            <Row>\r\n                                <Button onClick={sidebarHandler} type=\"button\" id=\"sidebarCollapse\" className=\"btn btn-info\">\r\n                                    <i className=\"fas fa-align-left\"></i>\r\n                                    <span>Toggle Sidebar</span>\r\n                                </Button>\r\n                            </Row>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <Row>\r\n                    <div className=\"main\">\r\n                        <h1>UD CIS Scheduler</h1>\r\n                        <h4>Christopher Bao, Trent Littleton, Alex Daley</h4>\r\n                        <p>Welcome to the Scheduler! Click on the add semester button to add your first semester and get started!</p> \r\n                        <p>-Select classes from the Sidebar; You can change the course name and choose which semester to add the course to a semester (Press Save Changes to apply)</p>\r\n                        <p>-Keep clicking add semester to add more semester tables.</p>\r\n                        <p>-Click remove semester to remove a table</p>\r\n                        <p>-Course information is viewable when you click on one</p>\r\n                        { semesterAdded ? semesterHandler() : null }\r\n                        <Button onClick={addSemester} type=\"button\" id=\"addsemesterbtn\">\r\n                            Add Semester\r\n                        </Button>\r\n                        <Button onClick={removeSemester} type=\"button\" id=\"addsemesterbtn\">\r\n                            Remove Semester\r\n                        </Button>\r\n                        { visible ? modalHandler() : null}\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        </Row>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\n//import { Course } from \"./course\";\r\n\r\nexport function Box(): JSX.Element {\r\n    const [{ isDragging }, drag, dragPreview] = useDrag(() => ({\r\n        type: \"BOX\",\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging()\r\n        })\r\n    }));\r\n  \r\n    return (\r\n        <div ref={dragPreview} style={{ opacity: isDragging ? 0.5 : 1}}>\r\n            <div role=\"Handle\" ref={drag} />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n//import logo from \"./logo.svg\";\r\nimport { ControlPanel } from \"./components/ControlPanel\";\r\nimport { Box } from \"./components/DragnDrop\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport COURSELIST from \"./components/courselist.json\";\r\nimport { useState } from \"react\";\r\nimport { Course } from \"./interfaces/course\";\r\n//import { SemesterTable } from \"./components/SemesterTable\";\r\n//import { Row } from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App(): JSX.Element {\r\n    const [schedule] = useState<Course[]>([]);\r\n    const [allSchedules, setAllSchedules] = useState<Course[][]>([schedule]);\r\n    const [visible, setVisible] = useState(false);\r\n    const [courseList] = useState<Course[]>([]);\r\n    for(let i = 0; i<COURSELIST[\"CISC\"].length; i++){\r\n        const [tempList] = useState<Course[]>(Object.values(COURSELIST[\"CISC\"][i]));\r\n        if(courseList.length < COURSELIST[\"CISC\"].length){\r\n            courseList.push(tempList[0]);\r\n        }\r\n    }\r\n    return (\r\n        <DndProvider backend={HTML5Backend}>\r\n            <div className=\"App\">\r\n                <ControlPanel courseList={courseList} allSchedules={allSchedules} setAllSchedules={setAllSchedules} visible={visible} setVisible={setVisible}></ControlPanel>\r\n                <Box></Box>\r\n            </div>\r\n        </DndProvider>\r\n    ); \r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}